$(document).ready(function() {
    "use strict";
    var subNavigation = $("#sub-navigation");
    if (subNavigation.length) {
        subNavigation.onePageNav({
            currentClass: "current",
            scrollSpeed: 750,
            scrollThreshold: .5,
            easing: "swing"
        });
        var navHomeY = subNavigation.offset().top, isFixed = !1, $w = $(window);
        subNavigation.length > 0 && $w.scroll(function() {
            var scrollTop = $w.scrollTop(), shouldBeFixed = scrollTop > navHomeY;
            shouldBeFixed && !isFixed ? (subNavigation.addClass("fixed"), isFixed = !0) : !shouldBeFixed && isFixed && (subNavigation.removeClass("fixed"), 
            isFixed = !1);
        });
    }
    $(".video-component").on("mouseover", "a", function() {
        $(this).closest(".video-component").addClass("hover");
    }).on("mouseout", "a", function() {
        $(this).closest(".video-component").removeClass("hover");
    }), $(".home-hotspot").one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", function() {
        $(this).removeClass("bounceIn").addClass("pulse"), $(this).closest(".page-link").hover(function() {
            $(this).find(".home-hotspot").removeClass("pulse"), $(this).closest(".link-container").addClass("hover");
        }, function() {
            $(this).find(".home-hotspot").addClass("pulse"), $(this).closest(".link-container").removeClass("hover");
        });
    }), $(".carousel").on("init", function() {
        $(".carousel").each(function() {
            var $carousel = $(this), $slides = $carousel.find(".slide"), $firstSlide = $slides.first(), $firstSlideHeading = $firstSlide.find(".title"), $otherSlides = $slides.not($firstSlide), sideNavigationId = $carousel.attr("id"), $sideNavigation = $('[data-carousel="' + sideNavigationId + '"]');
            $otherSlides.each(function() {
                var $thisHeading = $(this).find(".title");
                $thisHeading.length > 0 || "" === $thisHeading.html() ? $thisHeading.html($firstSlideHeading.html()) : $firstSlideHeading = $thisHeading;
            }), $sideNavigation.length > 0 && $carousel.on("beforeChange", function(event, slick, currentSlide, nextSlide) {
                $sideNavigation.find("li").removeClass("active").parent().find('[data-slide="' + nextSlide + '"]').parent("li").addClass("active");
            });
        }), $(".side-navigation").each(function() {
            var $this = $(this), carouselId = $this.data("carousel");
            if ("undefined" != typeof carouselId && "" !== carouselId) {
                var $carousel = $("#" + carouselId);
                $this.find("li").on("click", function(e) {
                    e.preventDefault();
                    var slideNumber = $(e.target).closest("a").data("slide");
                    $carousel.slick("slickGoTo", slideNumber);
                });
            }
        });
    }).slick({
        adaptiveHeight: !0,
        slide: ".slide",
        speed: 300,
        dots: !0,
        fade: !0,
        lazyLoad: "ondemand"
    }), $(".hidden").viewportChecker({
        classToAdd: "visible",
        classToRemove: "hidden",
        offset: 0,
        invertBottomOffset: !0,
        repeat: !1,
        callbackFunction: function() {},
        scrollHorizontal: !1
    }), $(".slider").slick({
        dots: !1,
        arrows: !1,
        infinite: !0,
        speed: 1e3,
        autoplay: !0,
        fade: !0,
        autoplaySpeed: 3e3,
        useCSS: !0,
        lazyLoad: "ondemand"
    }), $(".popup-image").each(function() {
        $(this).magnificPopup({
            type: "image",
            preloader: !0,
            removalDelay: 300,
            callbacks: {
                open: function() {
                    var copyrightInfo = this.currItem.el.data("copyright"), $copyrightElement = $("<small/>");
                    $copyrightElement.html(copyrightInfo), this.content.find("figcaption .mfp-title").after($copyrightElement);
                },
                beforeClose: function() {},
                close: function() {}
            },
            midClick: !0
        });
    }), $(".popup-video").magnificPopup({
        type: "iframe",
        preloader: !0,
        removalDelay: 300,
        callbacks: {
            beforeOpen: function() {},
            beforeClose: function() {},
            close: function() {}
        },
        midClick: !0
    }), $(".popup-ajax").magnificPopup({
        type: "ajax",
        preloader: !0,
        removalDelay: 300,
        callbacks: {
            ajaxContentAdded: function() {
                var startTime = this.currItem.el.data("startat");
                processAudio(startTime);
            }
        },
        midClick: !0
    });
});

var audioTimeout = 0, processAudio = function(startAt) {
    var $response = $(".mfp-content"), $audioPlayer = $response.find("audio");
    $audioPlayer.closest(".audioplayer").length < 1 && $audioPlayer.audioPlayer({
        classPrefix: "audioplayer",
        strPlay: "Play",
        strPause: "Pause",
        strVolume: "Volume"
    }), "undefined" == typeof startAt && "undefined" != $audioPlayer.data("startat") && (startAt = $audioPlayer.data("startat"));
    var autoPlay = function(startTime) {
        var $audioWrapper = $(".mfp-content audio").closest(".audioplayer");
        if ($audioWrapper.length > 0) {
            var $audio = $audioWrapper.find("audio");
            if ($audioWrapper.hasClass("audioplayer-playing")) $audio.one("canplay", function() {
                $audioWrapper.find(".audioplayer-playpause").trigger("click");
            }); else {
                var playAudioCheck = function() {
                    console.log("Audio not playing. Checking ready state."), $audioWrapper.hasClass("audioplayer-playing") ? (console.log("Audio playing. Cancelling future attempts to play."), 
                    clearTimeout(audioTimeout)) : $audio[0].readyState > 3 ? (startTime && ($audio[0].currentTime = startTime), 
                    console.log("Audio ready. Auto-playing."), $audioWrapper.find(".audioplayer-playpause").trigger("click")) : (console.log("Audio not ready. Attempting to play."), 
                    $audioWrapper.find(".audioplayer-playpause").trigger("click"), audioTimeout = setTimeout(playAudioCheck, 100));
                };
                playAudioCheck();
            }
        }
    };
    autoPlay(startAt);
}, unprocessAudio = function() {
    clearTimeout(audioTimeout);
    var $audioWrapper = $(".mfp-content audio").closest(".audioplayer");
    $audioWrapper.length > 0 && $audioWrapper.hasClass("audioplayer-playing") && $audioWrapper.find(".audioplayer-playpause").trigger("click");
};

$(function() {
    msieversion() || $(".pan-zoom-link").on("click", function(e) {
        e.preventDefault(), Armada.Overlay.show("zoom", $(this).data("painting"), "zoom");
    });
    var $interactivePainting = $(".interactive-painting"), imageBaseURL = "assets/img";
    if ("undefined" != typeof painting) for (var hotspots = painting.hotspots, hotspotHover = function() {
        $(".hotspot").addClass("knockback");
    }, hotspotOut = function() {
        $(".hotspot").removeClass("knockback");
    }, i = 0; i < hotspots.length; i++) {
        var hotspot = hotspots[i], $hotspot = $("<a/>"), $content = $("<div/>"), $popup = $("<div/>"), imageSrc = imageBaseURL + "/hotspots/" + hotspot.image.src;
        if ($hotspot.addClass("hotspot").css({
            left: hotspot.location.x + "%",
            top: hotspot.location.y + "%"
        }).addClass("hotspot-" + hotspot.category).data("details", hotspot).attr("href", "#painting-detail-" + hotspot.id).hover(hotspotHover, hotspotOut), 
        $interactivePainting.append($hotspot), $popup.addClass("painting-detail").attr("id", "painting-detail-" + hotspot.id), 
        $content.addClass("copy-wrapper"), "undefined" != typeof hotspot.heading && hotspot.heading.length > 0) {
            var $title = $("<h2/>"), $icon = $("<div/>");
            $title.text(hotspot.heading), $icon.addClass("hotspot-icon").addClass("hotspot-" + hotspot.category), 
            $title.append($icon), $content.append($title);
        }
        if ("undefined" != typeof hotspot.content && hotspot.content.length > 0) {
            var $contentHTML = $("<div/>");
            $contentHTML.html(hotspot.content), $content.append($contentHTML);
        }
        var $mediaWrapper = $("<div/>");
        $mediaWrapper.addClass("media-wrapper");
        var $media = $("<div/>");
        if ($media.addClass("media"), "undefined" != typeof hotspot.image) {
            if ("undefined" != typeof hotspot.image.src && hotspot.image.src.length > 0 && $media.append("<img/>").find("img").attr("src", imageSrc), 
            "undefined" != typeof hotspot.image.caption && hotspot.image.caption.length > 0) {
                var $caption = $("<div/>");
                $caption.addClass("media-caption").html(hotspot.image.caption), $mediaWrapper.append($caption);
            }
            var $minimap = $("<div/>"), $minimapImage = $("<img/>"), $positionMarker = $("<div/>"), $positionMarkerImage = $("<img/>");
            $positionMarkerImage.attr("src", imageSrc), $positionMarker.addClass("position-marker").css({
                top: hotspot.location.y + "%",
                left: hotspot.location.x + "%"
            }).append($positionMarkerImage), $minimapImage.attr("src", painting.image), $minimap.addClass("minimap").append($minimapImage).append($positionMarker), 
            $media.append($minimap);
        }
        if ("undefined" != typeof hotspot.audio && "undefined" != typeof hotspot.audio.src && hotspot.audio.src.length > 0) {
            var $audio = $("<audio/>");
            for (ii = 0; ii < hotspot.audio.src.length; ii++) {
                var $source = $("<source>");
                $source.attr("src", hotspot.audio.src[ii]), $audio.append($source);
            }
            if ($media.append($audio), "undefined" != typeof hotspot.audio.transcript) {
                var $transcript = $("<div/>"), $transcriptTitle = $("<h2/>");
                $transcriptTitle.html("Audio transcript"), $transcript.addClass("audio-transcript").append($transcriptTitle).append(hotspot.audio.transcript), 
                $content.append($transcript);
            }
        }
        $mediaWrapper.prepend($media), $popup.append($mediaWrapper).append($content), $interactivePainting.append($popup);
    }
    var $hotspots = $interactivePainting.find(".hotspot");
    $hotspots.magnificPopup({
        type: "inline",
        preloader: !0,
        removalDelay: 300,
        gallery: {
            enabled: !0,
            arrowMarkup: ""
        },
        callbacks: {
            open: function() {
                var hotspot = this.currItem.el.data("details");
                "undefined" != typeof hotspot.audio ? "undefined" != typeof hotspot.audio.startTime && processAudio(hotspot.audio.startTime) : processAudio();
            },
            beforeClose: function() {
                unprocessAudio(), $(".mfp-wrap").removeClass("no-animation");
            }
        },
        midClick: !0
    }), $.magnificPopup.instance.next = function() {
        $(".mfp-wrap").addClass("no-animation"), unprocessAudio(), $.magnificPopup.proto.next.call(this);
        var hotspot = this.currItem.el.data("details");
        "undefined" != typeof hotspot.audio ? "undefined" != typeof hotspot.audio.startTime && processAudio(hotspot.audio.startTime) : processAudio();
    }, $.magnificPopup.instance.prev = function() {
        $(".mfp-wrap").addClass("no-animation"), unprocessAudio(), $.magnificPopup.proto.prev.call(this);
        var hotspot = this.currItem.el.data("details");
        "undefined" != typeof hotspot.audio ? "undefined" != typeof hotspot.audio.startTime && processAudio(hotspot.audio.startTime) : processAudio();
    };
});